// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace MProject.Packet
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct NC2S_MoveActorInWorld : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static NC2S_MoveActorInWorld GetRootAsNC2S_MoveActorInWorld(ByteBuffer _bb) { return GetRootAsNC2S_MoveActorInWorld(_bb, new NC2S_MoveActorInWorld()); }
  public static NC2S_MoveActorInWorld GetRootAsNC2S_MoveActorInWorld(ByteBuffer _bb, NC2S_MoveActorInWorld obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public NC2S_MoveActorInWorld __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public uint WorldKey { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public MProject.Packet.Actor? Actors(int j) { int o = __p.__offset(6); return o != 0 ? (MProject.Packet.Actor?)(new MProject.Packet.Actor()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ActorsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<MProject.Packet.NC2S_MoveActorInWorld> CreateNC2S_MoveActorInWorld(FlatBufferBuilder builder,
      uint world_key = 0,
      VectorOffset actorsOffset = default(VectorOffset)) {
    builder.StartTable(2);
    NC2S_MoveActorInWorld.AddActors(builder, actorsOffset);
    NC2S_MoveActorInWorld.AddWorldKey(builder, world_key);
    return NC2S_MoveActorInWorld.EndNC2S_MoveActorInWorld(builder);
  }

  public static void StartNC2S_MoveActorInWorld(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddWorldKey(FlatBufferBuilder builder, uint worldKey) { builder.AddUint(0, worldKey, 0); }
  public static void AddActors(FlatBufferBuilder builder, VectorOffset actorsOffset) { builder.AddOffset(1, actorsOffset.Value, 0); }
  public static VectorOffset CreateActorsVector(FlatBufferBuilder builder, Offset<MProject.Packet.Actor>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateActorsVectorBlock(FlatBufferBuilder builder, Offset<MProject.Packet.Actor>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartActorsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<MProject.Packet.NC2S_MoveActorInWorld> EndNC2S_MoveActorInWorld(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<MProject.Packet.NC2S_MoveActorInWorld>(o);
  }
}


}
